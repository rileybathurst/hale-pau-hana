---
import fetchApi from "../lib/strapi";
import type RateTypes from "../interfaces/rate-types";
// you could do something about mapping all the season but with just 2 this works

// TODO: move a bunch of this overlap with index to a shared file
const rate = await fetchApi<RateTypes>({
  endpoint: "rate",
  wrappedByKey: "data",
  populate: {
    peak_season_start: {
      populate: true,
    },
    peak_season_end: {
      populate: true,
    },
    peak_rate: {
      populate: true,
    },
    off_season_rate: {
      populate: true,
    },
  },
});

const peak_season_start = new Date(rate.attributes.peak_season_start);

const peak_season_end = new Date(rate.attributes.peak_season_end);
// console.log(peak_season_end);

const off_season_start = new Date(rate.attributes.peak_season_start);
off_season_start.setDate(off_season_start.getDate() - 1);
// console.log(off_season_start);

const off_season_end = new Date(rate.attributes.peak_season_end);
off_season_end.setDate(off_season_end.getDate() + 1);
---

<!-- waiting on temporal -->
<section class="season">
  <!-- ? should this be a hyphen or colon -->
  <h3 class="title kilimanjaro">
    Off Season - ${rate.attributes.off_season_rate}
  </h3>
  <div class="cal-date">
    <span class="month">
      {off_season_end.toUTCString().split(" ")[2]}
    </span>
    <span>
      {new Date(off_season_end).getUTCDate()}
    </span>
  </div>
  <p class="through">through</p>
  <div class="cal-date">
    <span class="month">
      {off_season_start.toUTCString().split(" ")[2]}
    </span>
    <span>{new Date(off_season_start).getUTCDate()}</span>
  </div>
</section>

<hr />

<section class="season">
  <h3 class="title kilimanjaro">
    Peak Season : ${rate.attributes.peak_rate}
  </h3>
  <div class="cal-date">
    <span class="month">
      {peak_season_start.toUTCString().split(" ")[2]}
    </span>
    <span>
      {new Date(rate.attributes.peak_season_start).getUTCDate()}
    </span>
  </div>
  <p class="through">through</p>
  <div class="cal-date">
    <span class="month">
      {peak_season_end.toUTCString().split(" ")[2]}
    </span>
    <span>
      {new Date(rate.attributes.peak_season_end).getUTCDate()}
    </span>
  </div>
</section>
