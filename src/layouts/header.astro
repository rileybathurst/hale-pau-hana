---
import fetchApi from "../lib/strapi";
import SmallMenu from "../components/SmallMenu";
import { BlocksRenderer } from "@strapi/blocks-react-renderer";
import type TextTypes from "../interfaces/text-types";
import type AddressTypes from "../interfaces/address-types";
import type ContactTypes from "../interfaces/contact-types";
import FormatPhoneNumber from "../components/FormatPhoneNumber";

const contact = await fetchApi<ContactTypes>({
  endpoint: "contact",
  wrappedByKey: "data",
  /* populate: {
    name: {
      populate: true,
    },
    email: {
      populate: true,
    },
    phone: {
      populate: true,
    },
    postal: {
      populate: true,
    },
  }, */
});

const about = await fetchApi<TextTypes>({
  endpoint: "about",
  wrappedByKey: "data",
  populate: {
    text: {
      populate: true,
    },
  },
});

const address = await fetchApi<AddressTypes>({
  endpoint: "address",
  wrappedByKey: "data",
  /* populate: {
    streetAddress: {
      populate: true,
    },
    addressLocality: {
      populate: true,
    },
    addressRegion: {
      populate: true,
    },
    addressCountry: {
      populate: true,
    },
    postalCode: {
      populate: true,
    },
    unit: {
      populate: true,
    },
    island: {
      populate: true,
    },
    building: {
      populate: true,
    },
    googleMapLink: {
      populate: true,
    },
  }, */
});

// console.log(address);

// console.log(Astro.url.pathname);
---

<header class="header">
  <h1 class="font-hand text-center">
    <a href="/" class="link-subtle">
      {address.building}
    </a>
  </h1>
  {
    about?.text ? (
      <div class="kilimanjaro-p text-center">
        <BlocksRenderer content={about?.text} />
      </div>
    ) : null
  }
  <hr />
  <p class="text-center">
    <a
      href={`mailto:${contact.email}?subject=${address.building}`}
      class="button"
    >
      {contact.email}
    </a>
    <a href={`tel:${contact.phone}`} class="button">
      <FormatPhoneNumber phoneNumberString={contact.phone} />
    </a>
  </p>

  <hr />

  <SmallMenu client:load />

  <!-- TODO: update this to current -->
  <nav class="big-boy">
    <ul>
      <li>
        <a
          href="/directions"
          class={Astro.url.pathname === "/directions" ||
          Astro.url.pathname === "/directions/"
            ? "current"
            : null}
        >
          Directions
        </a>
      </li>
      <li>
        <a
          href="/information"
          class={Astro.url.pathname === "/information" ||
          Astro.url.pathname === "/information/"
            ? "current"
            : null}
        >
          Information
        </a>
      </li>
      <li>
        <a
          href="/see-and-do"
          class={Astro.url.pathname === "/see-and-do" ||
          Astro.url.pathname === "/see-and-do/"
            ? "current"
            : null}
        >
          Activities
        </a>
      </li>
      <li>
        <a
          href="/departure"
          class={Astro.url.pathname === "/departure" ||
          Astro.url.pathname === "/departure/"
            ? "current"
            : null}
        >
          Departure
        </a>
      </li>
      <li>
        <a
          href="/rates"
          class={Astro.url.pathname === "/rates" ||
          Astro.url.pathname === "/rates/"
            ? "current"
            : null}
        >
          Rates
        </a>
      </li>
      <li>
        <a
          href="https://docs.google.com/spreadsheets/d/1ACJAro0VvyIFJ-pVkg10v1InZZX4FY0yavQSbAJ5feI/edit?gid=0#gid=0"
        >
          Availability
        </a>
      </li>
    </ul>
  </nav>

  <hr />
  <address class="elbrus text-center">
    <a href={address.googleMapLink} target="_blank" rel="noopener noreferrer">
      {address.streetAddress}
      <br />
      {address.addressLocality},
      {address.island} - {
        address.addressRegion == "HI" ? "Hawaii" : address.addressRegion
      }
    </a>
  </address>
</header>
