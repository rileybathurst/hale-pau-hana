---
import fetchApi from "../lib/strapi";
import SmallMenu from "../components/SmallMenu";
import { BlocksRenderer } from "@strapi/blocks-react-renderer";
import type TextTypes from "../interfaces/text-types";
import type AddressTypes from "../interfaces/address-types";
import type ContactTypes from "../interfaces/contact-types";
import FormatPhoneNumber from "../components/FormatPhoneNumber";
import type RateTypes from "../interfaces/rate-types";

const contact = await fetchApi<ContactTypes>({
  endpoint: "contact",
  wrappedByKey: "data",
});

const about = await fetchApi<TextTypes>({
  endpoint: "about",
  wrappedByKey: "data",
  populate: {
    text: {
      populate: true,
    },
  },
});

const address = await fetchApi<AddressTypes>({
  endpoint: "address",
  wrappedByKey: "data",
});

const rate = await fetchApi<RateTypes>({
  endpoint: "rate",
  wrappedByKey: "data",
});

// console.log(rate.availability);

const menuItems: { label: string; href: string }[] = [
  { label: "Directions", href: "/directions/" },
  { label: "Information", href: "/information/" },
  { label: "Activities", href: "/see-and-do/" },
  { label: "Departure", href: "/departure/" },
  { label: "Rates", href: "/rates/" },
  { label: "Availability", href: rate.availability },
];
---

<header class="header">
  <h1 class="font-hand text-center">
    <a href="/" class="link-subtle">
      {address.building}
    </a>
  </h1>
  <address class="elbrus text-center">
    <a href={address.googleMapLink} target="_blank" rel="noopener noreferrer">
      {address.streetAddress}
      <br />
      {address.addressLocality},
      {address.island} - {
        address.addressRegion == "HI" ? "Hawaii" : address.addressRegion
      }
    </a>
  </address>
  <p class="text-center">
    <a
      href={`mailto:${contact.email}?subject=${address.building}`}
      class="button"
    >
      {contact.email}
    </a>
    <a href={`tel:${contact.phone}`} class="button">
      <FormatPhoneNumber phoneNumberString={contact.phone} />
    </a>
  </p>

  <hr class="show-above-condor" />

  <SmallMenu client:load menuItems={menuItems} />

  <nav class="big-boy">
    <ul>
      {
        menuItems.map((item) => (
          <li>
            <a
              href={item.href}
              {...(item.href.includes("http")
                ? { target: "_blank", rel: "noopener noreferrer" }
                : {})}
              class={
                Astro.url.pathname === item.href ||
                Astro.url.pathname === item.href + "/"
                  ? "current"
                  : null
              }
            >
              {item.label}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>

  <hr class="show-above-condor" />
</header>
